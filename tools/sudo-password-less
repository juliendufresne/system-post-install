#!/usr/bin/env bash

set -euo pipefail

shopt -s extglob

function userHasPasswordLessSudo() {
    local -r user="$1"

    local -i exitCode=0

    scrollingRegion::create --full-window 5

    sudo::validate 'check your current sudo permission'
    sudo -l -U "$user" | grep -q '([[:blank:]]*ALL[[:blank:]]*:[[:blank:]]*ALL[[:blank:]]*)[[:blank:]]*NOPASSWD:[[:blank:]]*ALL' || exitCode=$?

    scrollingRegion::restore

    return $exitCode
}
declare -rf userHasPasswordLessSudo

function main() {
    local -r bashOptions="$-"
    local    cleanUsername sudoFile preference

    : "${USER:="$( whoami )"}"

    log::addMessage "ran as '$USER' user"

    if [[ $USER == root ]]
    then
        output::warning "root user doesn't need password."
        log::addMessage "root user doesn't need password"

        return "$EXIT_USER_IS_ROOT"
    fi

    if userHasPasswordLessSudo "$USER"
    then
        output::info "User '$USER' already had password-less sudo permission."
        log::addMessage "user '$USER' already had password-less sudo permission"

        return "$EXIT_ALREADY_PASSWORD_LESS"
    fi

    preference="$( config::sudoPasswordLess::getPreference )"
    log::addMessage "user '$USER' does not have password-less sudo permission (default: '$preference')"

    if ! $ASK_MODE
    then
        log::addMessage 'using default settings'
    else
        set +x
        if dialog::confirm 'Configure sudo command' 'Do you want to use sudo commands with no password?' "$preference"
        then
            set "-$bashOptions"
            preference=true
            log::addMessage "user '$USER' chose password-less sudo permission"
        else
            set "-$bashOptions"
            preference=false
            log::addMessage "user '$USER' does not want password-less sudo permission"
        fi
    fi
    config::sudoPasswordLess::savePreference "$preference"

    if ! $preference
    then
        return "$EXIT_CANCELED"
    fi

    shopt -s extglob;

    # prevent diacritic issue on filename
    cleanUsername="$( iconv -f utf8 -t ascii//TRANSLIT//IGNORE <<<"$USER" )"
    cleanUsername="${cleanUsername//[^[:alnum:]]/}"
    cleanUsername="${cleanUsername,,}"
    sudoFile="/etc/sudoers.d/$cleanUsername"
    log::addMessage "using file '$sudoFile' to store the settings"

    sudo::validate 'edit your sudo permissions'
    printf -- '%s ALL=(ALL:ALL) NOPASSWD: ALL\n' "$USER" \
        | sudo::run 'edit your sudo permissions' EDITOR='tee' visudo -f "$sudoFile" >/dev/null

    output::info "User '$USER' has password-less sudo permission."
    log::addMessage "user '$USER' has password-less sudo permission"

    return "$EXIT_SUCCESS"
}

declare -g PROJECT_ROOT
PROJECT_ROOT="$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )/.." &> /dev/null && pwd )"
readonly PROJECT_ROOT

source "$PROJECT_ROOT/lib/config.lib.sh"
source "$PROJECT_ROOT/lib/dialog.lib.sh"
source "$PROJECT_ROOT/lib/log.lib.sh"
source "$PROJECT_ROOT/lib/output.lib.sh"
source "$PROJECT_ROOT/lib/scrolling-region.lib.sh"
source "$PROJECT_ROOT/lib/sudo.lib.sh"

declare -g  ASK_MODE=true # will ask what to install
declare -g  SHOW_REAL_EXIT_STATUS=false
# inspired from systemd codes:
# https://www.freedesktop.org/software/systemd/man/latest/systemd.exec.html#Process%20Exit%20Codes
declare -ig EXIT_SUCCESS=0
declare -ig EXIT_CANCELED=221
declare -ig EXIT_USER_IS_ROOT=101
declare -ig EXIT_ALREADY_PASSWORD_LESS=102

while [[ $# -gt 0 ]]
do
    case "$1" in
        --exit-status) SHOW_REAL_EXIT_STATUS=true;;
        --default) ASK_MODE=false;;
        -*)
            output::error >&2 "${0##*/}: unknown option '$1'."
            exit 2
            ;;
        *)
            output::error >&2 "${0##*/}: unknown argument '$1'."
            exit 2
            ;;
    esac
    shift
done

if ! $SHOW_REAL_EXIT_STATUS
then
    EXIT_ALREADY_PASSWORD_LESS=0
fi

main
